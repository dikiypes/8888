version: '3.8'

services:
    db:
        image: postgres
        environment:
        - POSTGRES_DB=coursework_7
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d coursework_7"]
            interval: 5s
            timeout: 5s
            retries: 10
        volumes:
        - ./pgdata:/var/lib/postgresql/data

    redis:
        image: redis
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping"]
            interval: 5s
            timeout: 5s
            retries: 10

    api:
        build: .
        ports:
            - '8000:8000'
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        command: sh -c "poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000"

    celery_worker:
        build: .
        depends_on:
            - db
            - redis
        command: sh -c "celery -A config worker -l INFO"

    celery_beat:
        build: .
        depends_on:
            - db
            - redis
            - celery_worker
        command: sh -c "sleep 30 && celery -A config beat -l info --loglevel=info"
